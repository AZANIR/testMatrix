name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
jobs:
  stage:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 18
    - name: Install dependencies
      run: npm ci
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Run Playwright tests
      run: npx playwright test
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report-stage
        path: playwright-report/
        retention-days: 30

  product:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 18
    - name: Install dependencies
      run: npm ci
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Run Playwright tests
      run: npx playwright test
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report-product
        path: playwright-report/
        retention-days: 30

  download_and_deploy:
    needs: [stage, product] # Укажите здесь все предыдущие задачи
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Wait for Artifacts to be ready
      run: sleep 60 # Подождите 10 секунд

    - name: Download Artifact Stage
      uses: actions/download-artifact@v3
      with:
        name: playwright-report-stage
        path: reports/stage

    - name: Download Artifact Product
      uses: actions/download-artifact@v3
      with:
        name: playwright-report-product
        path: reports/product

    - name: Generate Index HTML with Bootstrap for 'reports' directory
      run: |
        # Переходим в директорию 'reports'
        cd reports

        # Создаем начало index.html файла с подключением Bootstrap
        echo '<!DOCTYPE html>' > index.html
        echo '<html lang="en">' >> index.html
        echo '<head>' >> index.html
        echo '    <meta charset="UTF-8">' >> index.html
        echo '    <meta name="viewport" content="width=device-width, initial-scale=1.0">' >> index.html
        echo '    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">' >> index.html
        echo '    <title>Index of Reports</title>' >> index.html
        echo '</head>' >> index.html
        echo '<body>' >> index.html
        echo '    <div class="container mt-5">' >> index.html
        echo '        <h1 class="mb-4">Index of Reports</h1>' >> index.html
        echo '        <div class="list-group">' >> index.html

        # Перебираем папки внутри 'reports' и добавляем их в виде кнопок
        for folder in $(ls -d */); do
          echo "            <a href=\"$folder\" class=\"list-group-item list-group-item-action\">$(basename $folder)</a>" >> index.html
        done

        # Завершаем index.html файл
        echo '        </div>' >> index.html
        echo '    </div>' >> index.html
        echo '    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>' >> index.html
        echo '    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>' >> index.html
        echo '</body>' >> index.html
        echo '</html>' >> index.html

    # Шаг для деплоя на GitHub Pages
    - name: Deploy to GitHub Pages
      uses: crazy-max/ghaction-github-pages@v4
      with:
        target_branch: gh-pages
        build_dir: ./reports
      env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
